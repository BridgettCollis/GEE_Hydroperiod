// Load your Asset ROI by specifying the path to your Asset.
var assetRoi = ee.FeatureCollection('projects/ee-hydroperiod/assets/ROI'); // Replace with the path to your Asset

// Define a region of interest (ROI) based on your Asset ROI.
var geometry = assetRoi.geometry();


// Center the map on the ROI and set the zoom level.
Map.centerObject(geometry, 15);

// Create a black outline and transparent fill style for roi
var style = {
  color: 'black', 
  fillColor: '#00000000',
  width: 2 
};


// Add Asset ROI as a layer to the map with style
Map.addLayer(assetRoi.style(style), {}, 'Asset ROI');


var startDate = '2021-12-01';
var endDate = '2022-02-28';

var s2 = ee.ImageCollection('COPERNICUS/S2_HARMONIZED')
             .filterDate(startDate, endDate)
             .filterBounds(geometry)
             .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 35));


// Get a list of image IDs from the Sentinel-2 Image Collection
var imageIds = s2.aggregate_array('system:index');

// Convert the list of image IDs to a JavaScript array
var imageIdsArray = imageIds.getInfo();

// Create a new Image Collection by filtering the DYNAMICWORLD collection
var dynamicWorldCollection = ee.ImageCollection('GOOGLE/DYNAMICWORLD/V1')
  .filter(ee.Filter.inList('system:index', imageIdsArray));


// Get a list of images in the Image Collection
var imageList = dynamicWorldCollection.toList(dynamicWorldCollection.size());

// Loop through the list of images and export each image
for (var i = 0; i < imageList.size().getInfo(); i++) {
  var image = ee.Image(imageList.get(i));
  var imageID = image.id().getInfo(); // Convert to JavaScript string
  var date = ee.Date(image.get('system:time_start'));
  var dateString = date.format('YYYY_MM_dd').getInfo(); // Convert to JavaScript string
  
  // Select the 'label' band for each image
  var classification = image.select('label');
  
 // Convert to boolean where label equals 0 or 3
  var booleanClassification = classification.eq(0).or(classification.eq(3));
  
  // Export the image to Google Drive
  Export.image.toDrive({
    image: booleanClassification,
    description: dateString,
    scale: 10, 
    region: geometry,
    maxPixels: 1e12, 
    folder: 'GEE_Hydroperiod',
    formatOptions: {
      cloudOptimized: true 
    }
  });
  
  // Print a message for each export task
  print('Exporting image: ' + dateString);
}

